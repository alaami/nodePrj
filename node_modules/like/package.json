{
  "name": "like",
  "version": "0.1.0",
  "description": "build a regex from user input for filtering data",
  "main": "index.js",
  "scripts": {
    "test": "node node_modules/mocha/bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jden/like.git"
  },
  "keywords": [
    "restriction",
    "where",
    "query",
    "like",
    "filter",
    "regex",
    "regular",
    "expression"
  ],
  "author": {
    "name": "Agile Diagnosis",
    "email": "hello@agilediagnosis.com"
  },
  "contributors": [
    {
      "name": "jden",
      "email": "jason@denizac.org"
    }
  ],
  "license": "MIT",
  "devDependencies": {
    "chai": "~1.5.0",
    "chai-interface": "~1.1.0",
    "mocha": "~1.8.1"
  },
  "dependencies": {
    "quotemeta": "0.0.0"
  },
  "readme": "# like\nbuild a regex from user input for filtering data\n\n## installation\n    $ npm install like\n\n## usage\n\n    var like = require('like')\n\n    var filter = like(searchField.value)\n\n    var matches = items.filter(function (x) {\n      return filter.test(x)\n    })\n\n    // or we could get a predicate function like so:\n\n    var matches = items.filter(like.fn(searchField.value))\n\n## api\n\n### like(string) => RegExp\n\n### like.startsWith(string) => RegExp\n\n### like.endsWith(string) => RegExp\n\n### like.fn(string) => Predicate\n\n### like.startsWithFn(string) => Predicate\n\n### like.endsWithFn(string) => Predicate\n\n## running the tests\n\n    $ git clone git@github.com:AgileDiagnosis/like.git\n    $ cd like\n    $ npm install\n    $ npm test\n\n## kudos to\nsubstack for [quotemeta]()\n\n## contributors\n\njden <jason@denizac.org>\n\n## license\nMIT. (c) 2013 Agile Diagnosis <hello@agilediagnosis.com>. See LICENSE.md",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jden/like/issues"
  },
  "_id": "like@0.1.0",
  "_from": "like@~0.1.0"
}
